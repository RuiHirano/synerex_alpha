# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from api import smarket_pb2 as api_dot_smarket__pb2


class SMarketStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.RegisterDemand = channel.unary_unary(
        '/api.SMarket/RegisterDemand',
        request_serializer=api_dot_smarket__pb2.Demand.SerializeToString,
        response_deserializer=api_dot_smarket__pb2.Response.FromString,
        )
    self.RegisterSupply = channel.unary_unary(
        '/api.SMarket/RegisterSupply',
        request_serializer=api_dot_smarket__pb2.Supply.SerializeToString,
        response_deserializer=api_dot_smarket__pb2.Response.FromString,
        )
    self.ProposeDemand = channel.unary_unary(
        '/api.SMarket/ProposeDemand',
        request_serializer=api_dot_smarket__pb2.Demand.SerializeToString,
        response_deserializer=api_dot_smarket__pb2.Response.FromString,
        )
    self.ProposeSupply = channel.unary_unary(
        '/api.SMarket/ProposeSupply',
        request_serializer=api_dot_smarket__pb2.Supply.SerializeToString,
        response_deserializer=api_dot_smarket__pb2.Response.FromString,
        )
    self.ReserveSupply = channel.unary_unary(
        '/api.SMarket/ReserveSupply',
        request_serializer=api_dot_smarket__pb2.Target.SerializeToString,
        response_deserializer=api_dot_smarket__pb2.ConfirmResponse.FromString,
        )
    self.ReserveDemand = channel.unary_unary(
        '/api.SMarket/ReserveDemand',
        request_serializer=api_dot_smarket__pb2.Target.SerializeToString,
        response_deserializer=api_dot_smarket__pb2.ConfirmResponse.FromString,
        )
    self.SelectSupply = channel.unary_unary(
        '/api.SMarket/SelectSupply',
        request_serializer=api_dot_smarket__pb2.Target.SerializeToString,
        response_deserializer=api_dot_smarket__pb2.ConfirmResponse.FromString,
        )
    self.SelectDemand = channel.unary_unary(
        '/api.SMarket/SelectDemand',
        request_serializer=api_dot_smarket__pb2.Target.SerializeToString,
        response_deserializer=api_dot_smarket__pb2.ConfirmResponse.FromString,
        )
    self.Confirm = channel.unary_unary(
        '/api.SMarket/Confirm',
        request_serializer=api_dot_smarket__pb2.Target.SerializeToString,
        response_deserializer=api_dot_smarket__pb2.Response.FromString,
        )
    self.SubscribeDemand = channel.unary_stream(
        '/api.SMarket/SubscribeDemand',
        request_serializer=api_dot_smarket__pb2.Channel.SerializeToString,
        response_deserializer=api_dot_smarket__pb2.Demand.FromString,
        )
    self.SubscribeSupply = channel.unary_stream(
        '/api.SMarket/SubscribeSupply',
        request_serializer=api_dot_smarket__pb2.Channel.SerializeToString,
        response_deserializer=api_dot_smarket__pb2.Supply.FromString,
        )


class SMarketServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def RegisterDemand(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def RegisterSupply(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ProposeDemand(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ProposeSupply(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ReserveSupply(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ReserveDemand(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SelectSupply(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SelectDemand(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Confirm(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SubscribeDemand(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SubscribeSupply(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_SMarketServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'RegisterDemand': grpc.unary_unary_rpc_method_handler(
          servicer.RegisterDemand,
          request_deserializer=api_dot_smarket__pb2.Demand.FromString,
          response_serializer=api_dot_smarket__pb2.Response.SerializeToString,
      ),
      'RegisterSupply': grpc.unary_unary_rpc_method_handler(
          servicer.RegisterSupply,
          request_deserializer=api_dot_smarket__pb2.Supply.FromString,
          response_serializer=api_dot_smarket__pb2.Response.SerializeToString,
      ),
      'ProposeDemand': grpc.unary_unary_rpc_method_handler(
          servicer.ProposeDemand,
          request_deserializer=api_dot_smarket__pb2.Demand.FromString,
          response_serializer=api_dot_smarket__pb2.Response.SerializeToString,
      ),
      'ProposeSupply': grpc.unary_unary_rpc_method_handler(
          servicer.ProposeSupply,
          request_deserializer=api_dot_smarket__pb2.Supply.FromString,
          response_serializer=api_dot_smarket__pb2.Response.SerializeToString,
      ),
      'ReserveSupply': grpc.unary_unary_rpc_method_handler(
          servicer.ReserveSupply,
          request_deserializer=api_dot_smarket__pb2.Target.FromString,
          response_serializer=api_dot_smarket__pb2.ConfirmResponse.SerializeToString,
      ),
      'ReserveDemand': grpc.unary_unary_rpc_method_handler(
          servicer.ReserveDemand,
          request_deserializer=api_dot_smarket__pb2.Target.FromString,
          response_serializer=api_dot_smarket__pb2.ConfirmResponse.SerializeToString,
      ),
      'SelectSupply': grpc.unary_unary_rpc_method_handler(
          servicer.SelectSupply,
          request_deserializer=api_dot_smarket__pb2.Target.FromString,
          response_serializer=api_dot_smarket__pb2.ConfirmResponse.SerializeToString,
      ),
      'SelectDemand': grpc.unary_unary_rpc_method_handler(
          servicer.SelectDemand,
          request_deserializer=api_dot_smarket__pb2.Target.FromString,
          response_serializer=api_dot_smarket__pb2.ConfirmResponse.SerializeToString,
      ),
      'Confirm': grpc.unary_unary_rpc_method_handler(
          servicer.Confirm,
          request_deserializer=api_dot_smarket__pb2.Target.FromString,
          response_serializer=api_dot_smarket__pb2.Response.SerializeToString,
      ),
      'SubscribeDemand': grpc.unary_stream_rpc_method_handler(
          servicer.SubscribeDemand,
          request_deserializer=api_dot_smarket__pb2.Channel.FromString,
          response_serializer=api_dot_smarket__pb2.Demand.SerializeToString,
      ),
      'SubscribeSupply': grpc.unary_stream_rpc_method_handler(
          servicer.SubscribeSupply,
          request_deserializer=api_dot_smarket__pb2.Channel.FromString,
          response_serializer=api_dot_smarket__pb2.Supply.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'api.SMarket', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
