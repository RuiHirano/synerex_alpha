// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rideshare/rideshare.proto

package rideshare

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import common "common"
import duration "github.com/golang/protobuf/ptypes/duration"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type TrafficType int32

const (
	TrafficType_TAXI  TrafficType = 0
	TrafficType_BUS   TrafficType = 1
	TrafficType_TRAIN TrafficType = 2
)

var TrafficType_name = map[int32]string{
	0: "TAXI",
	1: "BUS",
	2: "TRAIN",
}
var TrafficType_value = map[string]int32{
	"TAXI":  0,
	"BUS":   1,
	"TRAIN": 2,
}

func (x TrafficType) String() string {
	return proto.EnumName(TrafficType_name, int32(x))
}
func (TrafficType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_rideshare_c08b1d5a6b8c9b69, []int{0}
}

type RideShare struct {
	DepartPoint          *common.Place `protobuf:"bytes,1,opt,name=depart_point,json=departPoint,proto3" json:"depart_point,omitempty"`
	ArrivePoint          *common.Place `protobuf:"bytes,2,opt,name=arrive_point,json=arrivePoint,proto3" json:"arrive_point,omitempty"`
	DepartTime           *common.Time  `protobuf:"bytes,3,opt,name=depart_time,json=departTime,proto3" json:"depart_time,omitempty"`
	ArriveTime           *common.Time  `protobuf:"bytes,4,opt,name=arrive_time,json=arriveTime,proto3" json:"arrive_time,omitempty"`
	NumAdult             uint32        `protobuf:"varint,5,opt,name=num_adult,json=numAdult,proto3" json:"num_adult,omitempty"`
	NumChilde            uint32        `protobuf:"varint,6,opt,name=num_childe,json=numChilde,proto3" json:"num_childe,omitempty"`
	Routes               []*Route      `protobuf:"bytes,7,rep,name=routes,proto3" json:"routes,omitempty"`
	AmountPrice          uint32        `protobuf:"varint,8,opt,name=amount_price,json=amountPrice,proto3" json:"amount_price,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *RideShare) Reset()         { *m = RideShare{} }
func (m *RideShare) String() string { return proto.CompactTextString(m) }
func (*RideShare) ProtoMessage()    {}
func (*RideShare) Descriptor() ([]byte, []int) {
	return fileDescriptor_rideshare_c08b1d5a6b8c9b69, []int{0}
}
func (m *RideShare) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RideShare.Unmarshal(m, b)
}
func (m *RideShare) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RideShare.Marshal(b, m, deterministic)
}
func (dst *RideShare) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RideShare.Merge(dst, src)
}
func (m *RideShare) XXX_Size() int {
	return xxx_messageInfo_RideShare.Size(m)
}
func (m *RideShare) XXX_DiscardUnknown() {
	xxx_messageInfo_RideShare.DiscardUnknown(m)
}

var xxx_messageInfo_RideShare proto.InternalMessageInfo

func (m *RideShare) GetDepartPoint() *common.Place {
	if m != nil {
		return m.DepartPoint
	}
	return nil
}

func (m *RideShare) GetArrivePoint() *common.Place {
	if m != nil {
		return m.ArrivePoint
	}
	return nil
}

func (m *RideShare) GetDepartTime() *common.Time {
	if m != nil {
		return m.DepartTime
	}
	return nil
}

func (m *RideShare) GetArriveTime() *common.Time {
	if m != nil {
		return m.ArriveTime
	}
	return nil
}

func (m *RideShare) GetNumAdult() uint32 {
	if m != nil {
		return m.NumAdult
	}
	return 0
}

func (m *RideShare) GetNumChilde() uint32 {
	if m != nil {
		return m.NumChilde
	}
	return 0
}

func (m *RideShare) GetRoutes() []*Route {
	if m != nil {
		return m.Routes
	}
	return nil
}

func (m *RideShare) GetAmountPrice() uint32 {
	if m != nil {
		return m.AmountPrice
	}
	return 0
}

type Route struct {
	TrafficType          TrafficType        `protobuf:"varint,1,opt,name=traffic_type,json=trafficType,proto3,enum=api.rideshare.TrafficType" json:"traffic_type,omitempty"`
	TransportName        string             `protobuf:"bytes,2,opt,name=transport_name,json=transportName,proto3" json:"transport_name,omitempty"`
	TransportLine        string             `protobuf:"bytes,3,opt,name=transport_line,json=transportLine,proto3" json:"transport_line,omitempty"`
	DepartPoint          *common.Place      `protobuf:"bytes,4,opt,name=depart_point,json=departPoint,proto3" json:"depart_point,omitempty"`
	ArrivePoint          *common.Place      `protobuf:"bytes,5,opt,name=arrive_point,json=arrivePoint,proto3" json:"arrive_point,omitempty"`
	DepartTime           *common.Time       `protobuf:"bytes,6,opt,name=depart_time,json=departTime,proto3" json:"depart_time,omitempty"`
	ArriveTime           *common.Time       `protobuf:"bytes,7,opt,name=arrive_time,json=arriveTime,proto3" json:"arrive_time,omitempty"`
	AmountTime           *duration.Duration `protobuf:"bytes,8,opt,name=amount_time,json=amountTime,proto3" json:"amount_time,omitempty"`
	AmountPrice          uint32             `protobuf:"varint,9,opt,name=amount_price,json=amountPrice,proto3" json:"amount_price,omitempty"`
	AmountSheets         uint32             `protobuf:"varint,10,opt,name=amount_sheets,json=amountSheets,proto3" json:"amount_sheets,omitempty"`
	AvailableSheets      uint32             `protobuf:"varint,11,opt,name=available_sheets,json=availableSheets,proto3" json:"available_sheets,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *Route) Reset()         { *m = Route{} }
func (m *Route) String() string { return proto.CompactTextString(m) }
func (*Route) ProtoMessage()    {}
func (*Route) Descriptor() ([]byte, []int) {
	return fileDescriptor_rideshare_c08b1d5a6b8c9b69, []int{1}
}
func (m *Route) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Route.Unmarshal(m, b)
}
func (m *Route) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Route.Marshal(b, m, deterministic)
}
func (dst *Route) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Route.Merge(dst, src)
}
func (m *Route) XXX_Size() int {
	return xxx_messageInfo_Route.Size(m)
}
func (m *Route) XXX_DiscardUnknown() {
	xxx_messageInfo_Route.DiscardUnknown(m)
}

var xxx_messageInfo_Route proto.InternalMessageInfo

func (m *Route) GetTrafficType() TrafficType {
	if m != nil {
		return m.TrafficType
	}
	return TrafficType_TAXI
}

func (m *Route) GetTransportName() string {
	if m != nil {
		return m.TransportName
	}
	return ""
}

func (m *Route) GetTransportLine() string {
	if m != nil {
		return m.TransportLine
	}
	return ""
}

func (m *Route) GetDepartPoint() *common.Place {
	if m != nil {
		return m.DepartPoint
	}
	return nil
}

func (m *Route) GetArrivePoint() *common.Place {
	if m != nil {
		return m.ArrivePoint
	}
	return nil
}

func (m *Route) GetDepartTime() *common.Time {
	if m != nil {
		return m.DepartTime
	}
	return nil
}

func (m *Route) GetArriveTime() *common.Time {
	if m != nil {
		return m.ArriveTime
	}
	return nil
}

func (m *Route) GetAmountTime() *duration.Duration {
	if m != nil {
		return m.AmountTime
	}
	return nil
}

func (m *Route) GetAmountPrice() uint32 {
	if m != nil {
		return m.AmountPrice
	}
	return 0
}

func (m *Route) GetAmountSheets() uint32 {
	if m != nil {
		return m.AmountSheets
	}
	return 0
}

func (m *Route) GetAvailableSheets() uint32 {
	if m != nil {
		return m.AvailableSheets
	}
	return 0
}

func init() {
	proto.RegisterType((*RideShare)(nil), "api.rideshare.RideShare")
	proto.RegisterType((*Route)(nil), "api.rideshare.Route")
	proto.RegisterEnum("api.rideshare.TrafficType", TrafficType_name, TrafficType_value)
}

func init() {
	proto.RegisterFile("rideshare/rideshare.proto", fileDescriptor_rideshare_c08b1d5a6b8c9b69)
}

var fileDescriptor_rideshare_c08b1d5a6b8c9b69 = []byte{
	// 484 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x93, 0xdd, 0x8a, 0xd3, 0x40,
	0x18, 0x86, 0xed, 0x7f, 0xf3, 0xa5, 0x5d, 0xe3, 0xe8, 0x41, 0xb6, 0xa2, 0xd4, 0x15, 0xa1, 0xfe,
	0x90, 0x62, 0xf5, 0x48, 0xf0, 0xa0, 0xab, 0x27, 0x0b, 0xb2, 0x94, 0x69, 0x04, 0xf1, 0x24, 0x4c,
	0x93, 0xe9, 0x76, 0x20, 0x99, 0x09, 0x93, 0xc9, 0xc2, 0x5e, 0x88, 0x37, 0xe9, 0x55, 0xc8, 0xfc,
	0x6c, 0xac, 0x5d, 0x16, 0xdc, 0x3d, 0x6a, 0xf2, 0xce, 0xf3, 0xcc, 0xd0, 0xef, 0xcd, 0xc0, 0xb1,
	0x64, 0x19, 0xad, 0x76, 0x44, 0xd2, 0x79, 0xf3, 0x14, 0x95, 0x52, 0x28, 0x81, 0xc6, 0xa4, 0x64,
	0x51, 0x13, 0x4e, 0x9e, 0x5f, 0x08, 0x71, 0x91, 0xd3, 0xb9, 0x59, 0xdc, 0xd4, 0xdb, 0x79, 0x56,
	0x4b, 0xa2, 0x98, 0xe0, 0x16, 0x9f, 0x3c, 0x4e, 0x45, 0x51, 0x08, 0x3e, 0xb7, 0x3f, 0x36, 0x3c,
	0xf9, 0xdd, 0x06, 0x0f, 0xb3, 0x8c, 0xae, 0xf5, 0x16, 0xe8, 0x23, 0x8c, 0x32, 0x5a, 0x12, 0xa9,
	0x92, 0x52, 0x30, 0xae, 0xc2, 0xd6, 0xb4, 0x35, 0xf3, 0x17, 0x8f, 0x22, 0x7d, 0x90, 0xd3, 0x56,
	0x39, 0x49, 0x29, 0xf6, 0x2d, 0xb6, 0xd2, 0x94, 0xb6, 0x88, 0x94, 0xec, 0x92, 0x3a, 0xab, 0x7d,
	0xab, 0x65, 0x31, 0x6b, 0xbd, 0x07, 0xb7, 0x49, 0xa2, 0x58, 0x41, 0xc3, 0x8e, 0x91, 0x82, 0x7d,
	0x29, 0x66, 0x05, 0xc5, 0x60, 0x21, 0xfd, 0xac, 0x15, 0x77, 0x90, 0x51, 0xba, 0xb7, 0x29, 0x16,
	0x32, 0xca, 0x53, 0xf0, 0x78, 0x5d, 0x24, 0x24, 0xab, 0x73, 0x15, 0xf6, 0xa6, 0xad, 0xd9, 0x18,
	0x0f, 0x79, 0x5d, 0x2c, 0xf5, 0x3b, 0x7a, 0x06, 0xa0, 0x17, 0xd3, 0x1d, 0xcb, 0x33, 0x1a, 0xf6,
	0xcd, 0xaa, 0xc6, 0xbf, 0x98, 0x00, 0xbd, 0x83, 0xbe, 0x14, 0xb5, 0xa2, 0x55, 0x38, 0x98, 0x76,
	0x66, 0xfe, 0xe2, 0x49, 0xf4, 0xcf, 0xc0, 0x23, 0xac, 0x17, 0xb1, 0x63, 0xd0, 0x0b, 0x18, 0x91,
	0x42, 0xd4, 0x5c, 0x25, 0xa5, 0x64, 0x29, 0x0d, 0x87, 0x66, 0x3b, 0xdf, 0x66, 0x2b, 0x1d, 0x9d,
	0xfc, 0xea, 0x42, 0xcf, 0x48, 0xe8, 0x33, 0x8c, 0x94, 0x24, 0xdb, 0x2d, 0x4b, 0x13, 0x75, 0x55,
	0x52, 0x33, 0xe8, 0xa3, 0xc5, 0xe4, 0xe0, 0x80, 0xd8, 0x22, 0xf1, 0x55, 0x49, 0xb1, 0xaf, 0xfe,
	0xbe, 0xa0, 0x57, 0x70, 0xa4, 0x24, 0xe1, 0x55, 0x29, 0xa4, 0x4a, 0x38, 0x29, 0xa8, 0x99, 0xb9,
	0x87, 0xc7, 0x4d, 0x7a, 0x4e, 0x8a, 0x03, 0x2c, 0x67, 0xdc, 0x4e, 0x79, 0x1f, 0xfb, 0xc6, 0xf8,
	0xcd, 0xd6, 0xbb, 0xf7, 0x6a, 0xbd, 0x77, 0x9f, 0xd6, 0xfb, 0x77, 0x6f, 0x7d, 0xf0, 0x1f, 0xad,
	0x7f, 0x02, 0x37, 0x77, 0xab, 0x0c, 0x8d, 0x72, 0x1c, 0xd9, 0x0b, 0x12, 0x5d, 0x5f, 0x90, 0xe8,
	0xab, 0xbb, 0x20, 0x18, 0x2c, 0x6d, 0xdc, 0xc3, 0x1e, 0xbd, 0x1b, 0x3d, 0xa2, 0x97, 0x30, 0x76,
	0x48, 0xb5, 0xa3, 0x54, 0x55, 0x21, 0x18, 0xc6, 0x79, 0x6b, 0x93, 0xa1, 0xd7, 0x10, 0x90, 0x4b,
	0xc2, 0x72, 0xb2, 0xc9, 0xe9, 0x35, 0xe7, 0x1b, 0xee, 0x61, 0x93, 0x5b, 0xf4, 0xcd, 0x5b, 0xf0,
	0xf7, 0xaa, 0x46, 0x43, 0xe8, 0xc6, 0xcb, 0x1f, 0x67, 0xc1, 0x03, 0x34, 0x80, 0xce, 0xe9, 0xf7,
	0x75, 0xd0, 0x42, 0x1e, 0xf4, 0x62, 0xbc, 0x3c, 0x3b, 0x0f, 0xda, 0xa7, 0xfe, 0x4f, 0xaf, 0xf9,
	0x42, 0x36, 0x7d, 0xf3, 0x5f, 0x3e, 0xfc, 0x09, 0x00, 0x00, 0xff, 0xff, 0xaf, 0xa0, 0x71, 0xaf,
	0x26, 0x04, 0x00, 0x00,
}
